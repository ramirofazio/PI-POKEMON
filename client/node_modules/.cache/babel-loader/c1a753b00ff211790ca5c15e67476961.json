{"ast":null,"code":"import axios from 'axios';\nexport const GET_POKEMONS = 'GET_POKEMONS';\nexport const GET_POKEMON_ID = 'GET_POKEMON_ID';\nexport const GET_POKEMON_NAME = 'GET_POKEMON_NAME';\nexport const GET_TYPES = 'GET_TYPES';\nexport const POST_POKEMON = 'POST_POKEMON';\nexport const GET_POKEMONS_BY_TYPES = 'GET_POKEMONS_BY_TYPES';\nexport const CLEAR_STATES = 'CLEAR_STATES';\nexport const CREATED_OR_DB = 'CREATED_OR_DB';\nexport function getPokemons() {\n  //console.log('Buscando Pokes')\n  return async function (dispatch) {\n    const pokes = (await axios.get('http://localhost:3001/pokemons')).data;\n    return dispatch({\n      type: GET_POKEMONS,\n      payload: pokes //Arreglo con pokemons del BackEnd\n\n    });\n  };\n}\nexport function getPokemonsId(id) {\n  return async function (dispatch) {\n    const pokeId = (await axios.get(`http://localhost:3001/pokemons/${id}`)).data;\n    return dispatch({\n      type: GET_POKEMON_ID,\n      payload: pokeId //Arreglo con detalles del poke id]\n\n    });\n  };\n}\nexport function getPokemonName(name) {\n  return async function (dispatch) {\n    try {\n      //console.log(name)\n      const pokeName = (await axios.get(`http://localhost:3001/pokemons/?name=${name}`)).data;\n      return dispatch({\n        type: GET_POKEMON_NAME,\n        payload: pokeName //Arreglo con detalle del poke Name\n\n      });\n    } catch {\n      console.log('Pokemon no encontrado');\n    }\n  };\n}\nexport function getTypes() {\n  return async function (dispatch) {\n    const types = (await axios.get('http://localhost:3001/types')).data;\n    return dispatch({\n      type: GET_TYPES,\n      payload: types //Arreglo con types\n\n    });\n  };\n}\nexport function postPokemon({\n  name,\n  hp,\n  strength,\n  defense,\n  speed,\n  height,\n  weight,\n  img,\n  types\n}) {\n  //Destructuring del objeto que te pasan\n  //Crear poke en la DB\n  return async function (dispatch) {\n    const newPoke = await axios.post('http://localhost:3001/pokemons', {\n      name: name,\n      hp: hp,\n      strength: strength,\n      defense: defense,\n      spee\n    });\n  };\n}\nexport function getPokemonsByTypes(filterType) {\n  return function (dispatch) {\n    return dispatch({\n      type: GET_POKEMONS_BY_TYPES,\n      payload: filterType\n    });\n  };\n}\nexport function clearStates() {\n  return function (dispatch) {\n    return dispatch({\n      type: CLEAR_STATES\n    });\n  };\n}\nexport function createdOrDB(value) {\n  return function (dispatch) {\n    //console.log('Estoy en actions', value)\n    return dispatch({\n      type: CREATED_OR_DB,\n      payload: value\n    });\n  };\n}","map":{"version":3,"sources":["/home/ramiro/Desktop/PI-Pokemon-main/client/src/actions/index.js"],"names":["axios","GET_POKEMONS","GET_POKEMON_ID","GET_POKEMON_NAME","GET_TYPES","POST_POKEMON","GET_POKEMONS_BY_TYPES","CLEAR_STATES","CREATED_OR_DB","getPokemons","dispatch","pokes","get","data","type","payload","getPokemonsId","id","pokeId","getPokemonName","name","pokeName","console","log","getTypes","types","postPokemon","hp","strength","defense","speed","height","weight","img","newPoke","post","spee","getPokemonsByTypes","filterType","clearStates","createdOrDB","value"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nexport const GET_POKEMONS = 'GET_POKEMONS';\nexport const GET_POKEMON_ID = 'GET_POKEMON_ID';\nexport const GET_POKEMON_NAME = 'GET_POKEMON_NAME';\nexport const GET_TYPES = 'GET_TYPES'\nexport const POST_POKEMON = 'POST_POKEMON';\nexport const GET_POKEMONS_BY_TYPES = 'GET_POKEMONS_BY_TYPES';\nexport const CLEAR_STATES = 'CLEAR_STATES';\nexport const CREATED_OR_DB = 'CREATED_OR_DB';\n\n\nexport function getPokemons() {\n    //console.log('Buscando Pokes')\n    return async function (dispatch) {\n\n        const pokes = (await axios.get('http://localhost:3001/pokemons')).data;\n\n        return dispatch({\n            type: GET_POKEMONS,\n            payload: pokes//Arreglo con pokemons del BackEnd\n        })\n    }\n}\n\nexport function getPokemonsId(id) {\n    return async function (dispatch) {\n\n        const pokeId = (await axios.get(`http://localhost:3001/pokemons/${id}`)).data;\n\n        return dispatch({\n            type: GET_POKEMON_ID,\n            payload: pokeId//Arreglo con detalles del poke id]\n        })\n    }\n}\n\nexport function getPokemonName(name) {\n    return async function (dispatch) {\n        try {\n            //console.log(name)\n            const pokeName = (await axios.get(`http://localhost:3001/pokemons/?name=${name}`)).data;\n            return dispatch({\n                type: GET_POKEMON_NAME,\n                payload: pokeName //Arreglo con detalle del poke Name\n            })\n        } catch {\n            console.log('Pokemon no encontrado')\n        }\n    }\n}\n\nexport function getTypes() {\n    return async function (dispatch) {\n        const types = (await axios.get('http://localhost:3001/types')).data;\n\n        return dispatch({\n            type: GET_TYPES,\n            payload: types, //Arreglo con types\n        })\n    }\n}\n\nexport function postPokemon({ name, hp, strength, defense, speed, height, weight, img, types }) {//Destructuring del objeto que te pasan\n    //Crear poke en la DB\n    return async function (dispatch) {\n        const newPoke = (await axios.post('http://localhost:3001/pokemons', {\n            name: name,\n            hp: hp,\n            strength: strength,\n            defense: defense,\n            spee\n        }))\n    }\n}\n\nexport function getPokemonsByTypes(filterType) {\n    return function (dispatch) {\n\n        return dispatch({\n            type: GET_POKEMONS_BY_TYPES,\n            payload: filterType,\n        })\n    }\n}\n\nexport function clearStates() {\n    return function (dispatch) {\n        return dispatch({\n            type: CLEAR_STATES,\n        })\n    }\n}\n\nexport function createdOrDB(value) {\n    return function (dispatch) {\n        //console.log('Estoy en actions', value)\n        return dispatch({\n            type: CREATED_OR_DB,\n            payload: value\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}