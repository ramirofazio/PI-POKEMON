{"ast":null,"code":"var _jsxFileName = \"/home/ramiro/Desktop/PI-Pokemon-main/client/src/Components/home/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getPokemons, getTypes, getPokemonsByTypes, getPokemonName, clearStates, createdOrDB, orderAZ, orderStrength } from \"../../actions\";\nimport Pokemons from \"../pokemons/Pokemons.jsx\";\nimport Paginado from \"../paginado/Paginado.jsx\";\nimport \"./Home.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const dispatch = useDispatch(); //Guardo el dispatch en la constante para poder despachar las actions donde quiera\n\n  const types = useSelector(state => state.types); //me guardo el array types del estado\n\n  const pokemons = useSelector(state => state.pokemons); //me guardo el array pokemmons del estado (tiene todos los pokemons)\n  //------------------------------PAGINADO-----------------------------------------------------\n\n  const [currentPage, setCurrentPage] = useState(1); //Estado Local de paginado\n\n  const [pokemonsPerPage, setPokemonsPerPage] = useState(9); //Digo en parametros de useState cuantos personajes por pagina quiero\n\n  const indexLastPokemon = currentPage * pokemonsPerPage; //Ultimo poke en la pagina. (Pagina 1 seria index 9)\n\n  const indexFirstPokemon = indexLastPokemon - pokemonsPerPage; //Index del primer poke de la pagina\n\n  const currentPokemons = pokemons.slice(indexFirstPokemon, indexLastPokemon); //Selecciono la cantidad de pokemons que quiero que se muestren con los index\n\n  const paginado = nroPag => {\n    setCurrentPage(nroPag);\n  }; //----------------------------LOCAL STATES---------------------------------------------------\n\n\n  const [pokemonName, setPokemonName] = useState(); //ESTADO LOCAL SEARCHBAR\n\n  const [orden, setOrden] = useState(\"\"); //ESTADOS LOCAL ORDEN\n\n  const [Filter, setFilter] = useState(\"\"); //ESTADOS LOCAL FILTROS\n\n  useEffect(() => {\n    //Aca despacho las 2 actions para que cuando se me cargue el componente los tenga en el estado\n    dispatch(getTypes());\n    dispatch(getPokemons());\n  }, []);\n  useEffect(() => console.log(\"HOME MONTADO\"), []); //----------------FILTRO TYPES----------------------------------\n\n  const handleOnChangeTypes = e => {\n    //Funcion onChange de SelectFiltrosTypes\n    //console.log(e.target.value);\n    dispatch(getPokemonsByTypes(e.target.value));\n    setFilter(\"Filtros listos\");\n  }; //--------------BOTON HOME---------------------\n\n\n  const handleOnClickHome = () => {\n    dispatch(clearStates());\n    setCurrentPage(1);\n  }; //-----------FILTRO API O DB-----------------------------------\n\n\n  const handleOnChangeCreatedOrDB = e => {\n    //console.log(e.target.value);\n    dispatch(createdOrDB(e.target.value));\n    setFilter(\"Filtros listos\");\n  }; //--------------ORDENAMIENTOS-----------------------------------\n\n\n  const handleOnChangeOrderStrength = e => {\n    const result = e.target.value; //console.log(result);\n\n    dispatch(orderStrength(result));\n    setOrden(`Ordenado ${e.target.value}`);\n  };\n\n  const handleOnChangeOrderAZ = e => {\n    const result = e.target.value; //console.log(result);\n\n    dispatch(orderAZ(result));\n    setOrden(`Ordenado ${e.target.value}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          children: \"Leave\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/home\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => handleOnClickHome(),\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchBar\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => {\n            e.preventDefault(); //console.log(pokemon);\n\n            const respuesta = pokemonName === null || pokemonName === void 0 ? void 0 : pokemonName.toLowerCase();\n            dispatch(getPokemonName(respuesta));\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Poke Search...\",\n            value: pokemonName,\n            onChange: e => setPokemonName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Search!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/create\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"orden\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Orden: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"ordenAZ\",\n          onChange: e => handleOnChangeOrderAZ(e),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Default\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"az\",\n            children: \"A - Z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"za\",\n            children: \"Z - A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"ordenStrength\",\n          onChange: e => handleOnChangeOrderStrength(e),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            onClick: dispatch(clearStates()),\n            children: \"Default\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"strength+-\",\n            children: \"\\u2191Attack - \\u2193Attack\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"strength-+\",\n            children: \"\\u2193Attack - \\u2191Attack\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filtros\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Filtros: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"types\",\n          onChange: e => handleOnChangeTypes(e),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"allTypes\",\n            children: \"allTypes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), types.map(type => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: `${type.name}`,\n              children: type.name\n            }, type.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"createdOrDB\",\n          onChange: e => handleOnChangeCreatedOrDB(e),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"allPokemons\",\n            children: \"allPokemons\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"DB\",\n            children: \"Created\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"api\",\n            children: \"Exists\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pokemons\",\n      children: /*#__PURE__*/_jsxDEV(Pokemons, {\n        currentPokemons: currentPokemons\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paginado\",\n      children: /*#__PURE__*/_jsxDEV(Paginado, {\n        pokemonsPerPage: pokemonsPerPage,\n        pokemons: pokemons.length,\n        paginado: paginado\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"HVGfGHjgQaIJLZwUW+V9AWEaCso=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/ramiro/Desktop/PI-Pokemon-main/client/src/Components/home/Home.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","Link","getPokemons","getTypes","getPokemonsByTypes","getPokemonName","clearStates","createdOrDB","orderAZ","orderStrength","Pokemons","Paginado","Home","dispatch","types","state","pokemons","currentPage","setCurrentPage","pokemonsPerPage","setPokemonsPerPage","indexLastPokemon","indexFirstPokemon","currentPokemons","slice","paginado","nroPag","pokemonName","setPokemonName","orden","setOrden","Filter","setFilter","console","log","handleOnChangeTypes","e","target","value","handleOnClickHome","handleOnChangeCreatedOrDB","handleOnChangeOrderStrength","result","handleOnChangeOrderAZ","preventDefault","respuesta","toLowerCase","map","type","name","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getPokemons,\n  getTypes,\n  getPokemonsByTypes,\n  getPokemonName,\n  clearStates,\n  createdOrDB,\n  orderAZ,\n  orderStrength,\n} from \"../../actions\";\nimport Pokemons from \"../pokemons/Pokemons.jsx\";\nimport Paginado from \"../paginado/Paginado.jsx\";\nimport \"./Home.css\";\n\nexport default function Home() {\n  const dispatch = useDispatch(); //Guardo el dispatch en la constante para poder despachar las actions donde quiera\n  const types = useSelector((state) => state.types); //me guardo el array types del estado\n  const pokemons = useSelector((state) => state.pokemons); //me guardo el array pokemmons del estado (tiene todos los pokemons)\n\n  //------------------------------PAGINADO-----------------------------------------------------\n  const [currentPage, setCurrentPage] = useState(1); //Estado Local de paginado\n  const [pokemonsPerPage, setPokemonsPerPage] = useState(9); //Digo en parametros de useState cuantos personajes por pagina quiero\n  const indexLastPokemon = currentPage * pokemonsPerPage; //Ultimo poke en la pagina. (Pagina 1 seria index 9)\n  const indexFirstPokemon = indexLastPokemon - pokemonsPerPage; //Index del primer poke de la pagina\n  const currentPokemons = pokemons.slice(indexFirstPokemon, indexLastPokemon); //Selecciono la cantidad de pokemons que quiero que se muestren con los index\n  const paginado = (nroPag) => {\n    setCurrentPage(nroPag);\n  };\n\n  //----------------------------LOCAL STATES---------------------------------------------------\n  const [pokemonName, setPokemonName] = useState(); //ESTADO LOCAL SEARCHBAR\n  const [orden, setOrden] = useState(\"\"); //ESTADOS LOCAL ORDEN\n  const [Filter, setFilter] = useState(\"\"); //ESTADOS LOCAL FILTROS\n\n  useEffect(() => {\n    //Aca despacho las 2 actions para que cuando se me cargue el componente los tenga en el estado\n    dispatch(getTypes());\n    dispatch(getPokemons());\n  }, []);\n\n\n  useEffect(() => console.log(\"HOME MONTADO\"), []);\n\n  //----------------FILTRO TYPES----------------------------------\n  const handleOnChangeTypes = (e) => {\n    //Funcion onChange de SelectFiltrosTypes\n    //console.log(e.target.value);\n    dispatch(getPokemonsByTypes(e.target.value));\n    setFilter(\"Filtros listos\");\n  };\n\n  //--------------BOTON HOME---------------------\n  const handleOnClickHome = () => {\n    dispatch(clearStates());\n    setCurrentPage(1);\n  };\n\n  //-----------FILTRO API O DB-----------------------------------\n  const handleOnChangeCreatedOrDB = (e) => {\n    //console.log(e.target.value);\n    dispatch(createdOrDB(e.target.value));\n    setFilter(\"Filtros listos\");\n  };\n\n  //--------------ORDENAMIENTOS-----------------------------------\n  const handleOnChangeOrderStrength = (e) => {\n    const result = e.target.value;\n    //console.log(result);\n    dispatch(orderStrength(result));\n    setOrden(`Ordenado ${e.target.value}`);\n  };\n\n  const handleOnChangeOrderAZ = (e) => {\n    const result = e.target.value;\n    //console.log(result);\n    dispatch(orderAZ(result));\n    setOrden(`Ordenado ${e.target.value}`);\n  };\n\n  return (\n    <div>\n      <div className=\"container\">\n        {/*-----------------NAV--------------------- */}\n        <Link to=\"/\">\n          <button className=\"btn\">Leave</button>\n        </Link>\n        <Link to=\"/home\">\n          <button className=\"btn\" onClick={() => handleOnClickHome()}>\n            Home\n          </button>\n        </Link>\n        <div className=\"searchBar\">\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n              //console.log(pokemon);\n              const respuesta = pokemonName?.toLowerCase();\n              dispatch(getPokemonName(respuesta));\n            }}\n          >\n            <input\n              type=\"text\"\n              placeholder=\"Poke Search...\"\n              value={pokemonName}\n              onChange={(e) => setPokemonName(e.target.value)}\n            />\n            <input type=\"submit\" value=\"Search!\" />\n          </form>\n        </div>\n        <Link to=\"/create\">\n          <button>Create</button>\n        </Link>\n        {/*-----------------------------ORDENAMIENTOS-------------------------- */}\n        <div className=\"orden\">\n          <p>Orden: </p>\n          <select name=\"ordenAZ\" onChange={(e) => handleOnChangeOrderAZ(e)}>\n            <option>Default</option>\n            <option value=\"az\">A - Z</option>\n            <option value=\"za\">Z - A</option>\n          </select>\n          <select\n            name=\"ordenStrength\"\n            onChange={(e) => handleOnChangeOrderStrength(e)}\n          >\n            <option onClick={dispatch(clearStates())}>Default</option>\n            <option value=\"strength+-\">↑Attack - ↓Attack</option>\n            <option value=\"strength-+\">↓Attack - ↑Attack</option>\n          </select>\n        </div>\n        {/*-----------------------------FILTROS-------------------------- */}\n        <div className=\"filtros\">\n          <p>Filtros: </p>\n          <select name=\"types\" onChange={(e) => handleOnChangeTypes(e)}>\n            <option value=\"allTypes\">allTypes</option>\n            {types.map((type) => {\n              return (\n                <option value={`${type.name}`} key={type.name}>\n                  {type.name}\n                </option>\n              );\n            })}\n          </select>\n          <select\n            name=\"createdOrDB\"\n            onChange={(e) => handleOnChangeCreatedOrDB(e)}\n          >\n            <option value=\"allPokemons\">allPokemons</option>\n            <option value=\"DB\">Created</option>\n            <option value=\"api\">Exists</option>\n          </select>\n        </div>\n      </div>\n      {/*-----------------------------BODY-------------------------- */}\n      <div className=\"pokemons\">\n        <Pokemons currentPokemons={currentPokemons} />\n      </div>\n      <div className=\"paginado\">\n        <Paginado\n          pokemonsPerPage={pokemonsPerPage}\n          pokemons={pokemons.length}\n          paginado={paginado}\n        />\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}