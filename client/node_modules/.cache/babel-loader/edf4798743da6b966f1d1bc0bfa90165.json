{"ast":null,"code":"import { CLEAR_STATES, GET_POKEMONS, GET_POKEMON_ID, GET_POKEMON_NAME, GET_TYPES, POST_POKEMON, GET_POKEMONS_BY_TYPES } from \"../actions\"; //----------\n\nlet initialState = {\n  pokemons: [],\n  allPokemons: [],\n  pokemonDetail: [],\n  types: [],\n  pokemonsBuscados: null\n};\n\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_POKEMONS:\n      return { ...state,\n        pokemons: action.payload,\n        allPokemons: action.payload\n      };\n\n    case GET_POKEMON_ID:\n      return { ...state,\n        pokemonDetail: action.payload\n      };\n\n    case GET_POKEMON_NAME:\n      //console.log('Estoy en reducer: ', action.payload)    \n      let poke = action.payload; //console.log(poke)\n\n      return { ...state,\n        pokemonsBuscados: poke\n      };\n\n    case GET_TYPES:\n      return { ...state,\n        types: action.payload\n      };\n\n    case GET_POKEMONS_BY_TYPES:\n      let type = action.payload;\n      let allPokemons = state.allPokemons;\n      let pokesByTypes = type === 'allTypes' ? allPokemons : allPokemons.filter(pokes => pokes.types.includes(type));\n      return { ...state,\n        pokemons: pokesByTypes\n      };\n\n    case CLEAR_STATES:\n      return {};\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["/home/ramiro/Desktop/PI-Pokemon-main/client/src/reducer/index.js"],"names":["CLEAR_STATES","GET_POKEMONS","GET_POKEMON_ID","GET_POKEMON_NAME","GET_TYPES","POST_POKEMON","GET_POKEMONS_BY_TYPES","initialState","pokemons","allPokemons","pokemonDetail","types","pokemonsBuscados","rootReducer","state","action","type","payload","poke","pokesByTypes","filter","pokes","includes"],"mappings":"AAAA,SACIA,YADJ,EAEIC,YAFJ,EAGIC,cAHJ,EAIIC,gBAJJ,EAKIC,SALJ,EAMIC,YANJ,EAOIC,qBAPJ,QAQO,YARP,C,CAUA;;AACA,IAAIC,YAAY,GAAG;AACfC,EAAAA,QAAQ,EAAE,EADK;AAEfC,EAAAA,WAAW,EAAE,EAFE;AAGfC,EAAAA,aAAa,EAAE,EAHA;AAIfC,EAAAA,KAAK,EAAE,EAJQ;AAKfC,EAAAA,gBAAgB,EAAE;AALH,CAAnB;;AAQA,SAASC,WAAT,CAAqBC,KAAK,GAAGP,YAA7B,EAA2CQ,MAA3C,EAAmD;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKf,YAAL;AACI,aAAO,EACH,GAAGa,KADA;AAEHN,QAAAA,QAAQ,EAAEO,MAAM,CAACE,OAFd;AAGHR,QAAAA,WAAW,EAAEM,MAAM,CAACE;AAHjB,OAAP;;AAKJ,SAAKf,cAAL;AACI,aAAO,EACH,GAAGY,KADA;AAEHJ,QAAAA,aAAa,EAAEK,MAAM,CAACE;AAFnB,OAAP;;AAIJ,SAAKd,gBAAL;AACI;AACA,UAAIe,IAAI,GAAGH,MAAM,CAACE,OAAlB,CAFJ,CAGI;;AACA,aAAO,EACH,GAAGH,KADA;AAEHF,QAAAA,gBAAgB,EAAEM;AAFf,OAAP;;AAIJ,SAAKd,SAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHH,QAAAA,KAAK,EAAEI,MAAM,CAACE;AAFX,OAAP;;AAIJ,SAAKX,qBAAL;AACI,UAAIU,IAAI,GAAGD,MAAM,CAACE,OAAlB;AACA,UAAIR,WAAW,GAAGK,KAAK,CAACL,WAAxB;AACA,UAAIU,YAAY,GAAGH,IAAI,KAAK,UAAT,GACfP,WADe,GAEfA,WAAW,CAACW,MAAZ,CAAoBC,KAAD,IAAWA,KAAK,CAACV,KAAN,CAAYW,QAAZ,CAAqBN,IAArB,CAA9B,CAFJ;AAIA,aAAO,EACH,GAAGF,KADA;AAEHN,QAAAA,QAAQ,EAAEW;AAFP,OAAP;;AAIJ,SAAKnB,YAAL;AACI,aAAO,EAAP;;AAGJ;AACI,aAAOc,KAAP;AAzCR;AA2CH;;AAED,eAAeD,WAAf","sourcesContent":["import {\n    CLEAR_STATES,\n    GET_POKEMONS,\n    GET_POKEMON_ID,\n    GET_POKEMON_NAME,\n    GET_TYPES,\n    POST_POKEMON,\n    GET_POKEMONS_BY_TYPES\n} from \"../actions\";\n\n//----------\nlet initialState = {\n    pokemons: [],\n    allPokemons: [],\n    pokemonDetail: [],\n    types: [],\n    pokemonsBuscados: null,\n}\n\nfunction rootReducer(state = initialState, action) {\n    switch (action.type) {\n        case GET_POKEMONS:\n            return {\n                ...state,\n                pokemons: action.payload,\n                allPokemons: action.payload,\n            }\n        case GET_POKEMON_ID:\n            return {\n                ...state,\n                pokemonDetail: action.payload,\n            }\n        case GET_POKEMON_NAME:\n            //console.log('Estoy en reducer: ', action.payload)    \n            let poke = action.payload;\n            //console.log(poke)\n            return {\n                ...state,\n                pokemonsBuscados: poke\n            }\n        case GET_TYPES:\n            return {\n                ...state,\n                types: action.payload,\n            }\n        case GET_POKEMONS_BY_TYPES:\n            let type = action.payload;\n            let allPokemons = state.allPokemons;\n            let pokesByTypes = type === 'allTypes' ?\n                allPokemons :\n                allPokemons.filter((pokes) => pokes.types.includes(type))\n\n            return {\n                ...state,\n                pokemons: pokesByTypes,\n            }\n        case CLEAR_STATES:\n            return {\n\n            }\n        default:\n            return state;\n    }\n}\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}