{"ast":null,"code":"var _jsxFileName = \"/home/ramiro/Desktop/PI-Pokemon-main/client/src/Components/home/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { getPokemons, getTypes, getPokemonsByTypes, getPokemonName, clearStates, createdOrDB, orderAZ, orderStrength, getPokemonsId } from \"../../actions\";\nimport Pokemons from \"../pokemons/Pokemons.jsx\";\nimport Paginado from \"../paginado/Paginado.jsx\";\nimport style from \"./Home.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const dispatch = useDispatch(); //Guardo el dispatch en la constante para poder despachar las actions donde quiera\n\n  const types = useSelector(state => state.types); //me guardo el array types del estado\n\n  const pokemons = useSelector(state => state.pokemons); //me guardo el array pokemmons del estado (tiene todos los pokemons)\n  //------------------------------PAGINADO-----------------------------------------------------\n\n  const [currentPage, setCurrentPage] = useState(1); //Estado Local de paginado\n\n  const [pokemonsPerPage, setPokemonsPerPage] = useState(9); //Digo en parametros de useState cuantos personajes por pagina quiero\n\n  const indexLastPokemon = currentPage * pokemonsPerPage; //Ultimo poke en la pagina. (Pagina 1 seria index 9)\n\n  const indexFirstPokemon = indexLastPokemon - pokemonsPerPage; //Index del primer poke de la pagina\n\n  const currentPokemons = pokemons.slice(indexFirstPokemon, indexLastPokemon); //Selecciono la cantidad de pokemons que quiero que se muestren con los index\n\n  const paginado = nroPag => {\n    setCurrentPage(nroPag);\n  }; //----------------------------LOCAL STATES---------------------------------------------------\n\n\n  const [pokemonName, setPokemonName] = useState(); //ESTADO LOCAL SEARCHBAR\n\n  const [orden, setOrden] = useState(\"\"); //ESTADOS LOCAL ORDEN\n\n  useEffect(() => {\n    //Aca despacho las 2 actions para que cuando se monte el componente los tenga en el estado\n    dispatch(getTypes());\n    dispatch(getPokemons());\n  }, []); //----------------FILTRO TYPES----------------------------------\n\n  const handleOnChangeTypes = e => {\n    //Funcion onChange de SelectFiltrosTypes\n    //console.log(e.target.value);\n    dispatch(getPokemonsByTypes(e.target.value));\n  }; //--------------BOTON HOME---------------------\n\n\n  const handleOnClickHome = () => {\n    dispatch(clearStates());\n    setCurrentPage(1);\n  }; //-----------FILTRO API O DB-----------------------------------\n\n\n  const handleOnChangeCreatedOrDB = e => {\n    //console.log(e.target.value);\n    dispatch(createdOrDB(e.target.value));\n  }; //--------------ORDENAMIENTOS-----------------------------------\n\n\n  const handleOnChangeOrderStrength = e => {\n    const result = e.target.value; //console.log(result);\n\n    result === \"default\" ? dispatch(getPokemons()) : dispatch(orderStrength(result));\n    setOrden(`Ordenado ${e.target.value}`);\n  };\n\n  const handleOnChangeOrderAZ = e => {\n    const result = e.target.value; //console.log(result);\n\n    result === \"default\" ? dispatch(getPokemons()) : dispatch(orderAZ(result));\n    setOrden(`Ordenado ${e.target.value}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: style.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: style.nav,\n      children: [/*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Leave\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/home\",\n        class: style.buttonHome,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleOnClickHome(),\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: style.searchBar,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => {\n            e.preventDefault(); //console.log(pokemon);\n\n            const respuesta = pokemonName === null || pokemonName === void 0 ? void 0 : pokemonName.toLowerCase();\n            dispatch(getPokemonName(respuesta));\n            setPokemonName(\"\");\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            class: style.text,\n            type: \"text\",\n            placeholder: \"Poke Search...\",\n            value: pokemonName,\n            onChange: e => setPokemonName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Search!\",\n            class: style.submit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/create\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          class: style.buttonCreate,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: style.orden,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          class: style.p,\n          children: \"Orden: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"ordenAZ\",\n          onChange: e => handleOnChangeOrderAZ(e),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            class: style.opt,\n            value: \"default\",\n            children: \"Default\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            class: style.opt,\n            value: \"az\",\n            children: \"A - Z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            class: style.opt,\n            value: \"za\",\n            children: \"Z - A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"ordenStrength\",\n          onChange: e => handleOnChangeOrderStrength(e),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            class: style.opt,\n            value: \"default\",\n            children: \"Default\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            class: style.opt,\n            value: \"strength+-\",\n            children: \"\\u2191Attack - \\u2193Attack\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            class: style.opt,\n            value: \"strength-+\",\n            children: \"\\u2193Attack - \\u2191Attack\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: style.filtros,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          class: style.p,\n          children: \"Filtros: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"types\",\n          onChange: e => handleOnChangeTypes(e),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"allTypes\",\n            children: \"All Types\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), types.map(type => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: `${type.name}`,\n              children: type.name\n            }, type.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"createdOrDB\",\n          onChange: e => handleOnChangeCreatedOrDB(e),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"allPokemons\",\n            children: \"All Pokemons\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"DB\",\n            children: \"Created\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"api\",\n            children: \"Exists\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paginado, {\n      pokemonsPerPage: pokemonsPerPage,\n      pokemons: pokemons.length,\n      paginado: paginado\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pokemons, {\n      currentPokemons: currentPokemons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"e0lQpFe0MVrNw5WG+en2Q0VcRWw=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/ramiro/Desktop/PI-Pokemon-main/client/src/Components/home/Home.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","NavLink","getPokemons","getTypes","getPokemonsByTypes","getPokemonName","clearStates","createdOrDB","orderAZ","orderStrength","getPokemonsId","Pokemons","Paginado","style","Home","dispatch","types","state","pokemons","currentPage","setCurrentPage","pokemonsPerPage","setPokemonsPerPage","indexLastPokemon","indexFirstPokemon","currentPokemons","slice","paginado","nroPag","pokemonName","setPokemonName","orden","setOrden","handleOnChangeTypes","e","target","value","handleOnClickHome","handleOnChangeCreatedOrDB","handleOnChangeOrderStrength","result","handleOnChangeOrderAZ","container","nav","buttonHome","searchBar","preventDefault","respuesta","toLowerCase","text","submit","buttonCreate","p","opt","filtros","map","type","name","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SACEC,WADF,EAEEC,QAFF,EAGEC,kBAHF,EAIEC,cAJF,EAKEC,WALF,EAMEC,WANF,EAOEC,OAPF,EAQEC,aARF,EASEC,aATF,QAUO,eAVP;AAWA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAMC,QAAQ,GAAGhB,WAAW,EAA5B,CAD6B,CACG;;AAChC,QAAMiB,KAAK,GAAGhB,WAAW,CAAEiB,KAAD,IAAWA,KAAK,CAACD,KAAlB,CAAzB,CAF6B,CAEsB;;AACnD,QAAME,QAAQ,GAAGlB,WAAW,CAAEiB,KAAD,IAAWA,KAAK,CAACC,QAAlB,CAA5B,CAH6B,CAG4B;AAEzD;;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCtB,QAAQ,CAAC,CAAD,CAA9C,CAN6B,CAMsB;;AACnD,QAAM,CAACuB,eAAD,EAAkBC,kBAAlB,IAAwCxB,QAAQ,CAAC,CAAD,CAAtD,CAP6B,CAO8B;;AAC3D,QAAMyB,gBAAgB,GAAGJ,WAAW,GAAGE,eAAvC,CAR6B,CAQ2B;;AACxD,QAAMG,iBAAiB,GAAGD,gBAAgB,GAAGF,eAA7C,CAT6B,CASiC;;AAC9D,QAAMI,eAAe,GAAGP,QAAQ,CAACQ,KAAT,CAAeF,iBAAf,EAAkCD,gBAAlC,CAAxB,CAV6B,CAUgD;;AAC7E,QAAMI,QAAQ,GAAIC,MAAD,IAAY;AAC3BR,IAAAA,cAAc,CAACQ,MAAD,CAAd;AACD,GAFD,CAX6B,CAe7B;;;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgChC,QAAQ,EAA9C,CAhB6B,CAgBqB;;AAClD,QAAM,CAACiC,KAAD,EAAQC,QAAR,IAAoBlC,QAAQ,CAAC,EAAD,CAAlC,CAjB6B,CAiBW;;AAExCD,EAAAA,SAAS,CAAC,MAAM;AACd;AACAkB,IAAAA,QAAQ,CAACZ,QAAQ,EAAT,CAAR;AACAY,IAAAA,QAAQ,CAACb,WAAW,EAAZ,CAAR;AACD,GAJQ,EAIN,EAJM,CAAT,CAnB6B,CAyB7B;;AACA,QAAM+B,mBAAmB,GAAIC,CAAD,IAAO;AACjC;AACA;AACAnB,IAAAA,QAAQ,CAACX,kBAAkB,CAAC8B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnB,CAAR;AACD,GAJD,CA1B6B,CAgC7B;;;AACA,QAAMC,iBAAiB,GAAG,MAAM;AAC9BtB,IAAAA,QAAQ,CAACT,WAAW,EAAZ,CAAR;AACAc,IAAAA,cAAc,CAAC,CAAD,CAAd;AACD,GAHD,CAjC6B,CAsC7B;;;AACA,QAAMkB,yBAAyB,GAAIJ,CAAD,IAAO;AACvC;AACAnB,IAAAA,QAAQ,CAACR,WAAW,CAAC2B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ,CAAR;AACD,GAHD,CAvC6B,CA4C7B;;;AACA,QAAMG,2BAA2B,GAAIL,CAAD,IAAO;AACzC,UAAMM,MAAM,GAAGN,CAAC,CAACC,MAAF,CAASC,KAAxB,CADyC,CAEzC;;AACAI,IAAAA,MAAM,KAAK,SAAX,GACIzB,QAAQ,CAACb,WAAW,EAAZ,CADZ,GAEIa,QAAQ,CAACN,aAAa,CAAC+B,MAAD,CAAd,CAFZ;AAGAR,IAAAA,QAAQ,CAAE,YAAWE,CAAC,CAACC,MAAF,CAASC,KAAM,EAA5B,CAAR;AACD,GAPD;;AASA,QAAMK,qBAAqB,GAAIP,CAAD,IAAO;AACnC,UAAMM,MAAM,GAAGN,CAAC,CAACC,MAAF,CAASC,KAAxB,CADmC,CAEnC;;AACAI,IAAAA,MAAM,KAAK,SAAX,GAAuBzB,QAAQ,CAACb,WAAW,EAAZ,CAA/B,GAAiDa,QAAQ,CAACP,OAAO,CAACgC,MAAD,CAAR,CAAzD;AACAR,IAAAA,QAAQ,CAAE,YAAWE,CAAC,CAACC,MAAF,CAASC,KAAM,EAA5B,CAAR;AACD,GALD;;AAOA,sBACE;AAAK,IAAA,KAAK,EAAEvB,KAAK,CAAC6B,SAAlB;AAAA,4BACE;AAAK,MAAA,KAAK,EAAE7B,KAAK,CAAC8B,GAAlB;AAAA,8BAEE,QAAC,OAAD;AAAS,QAAA,EAAE,EAAC,GAAZ;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,OAAD;AAAS,QAAA,EAAE,EAAC,OAAZ;AAAoB,QAAA,KAAK,EAAE9B,KAAK,CAAC+B,UAAjC;AAAA,+BACE;AAAQ,UAAA,OAAO,EAAE,MAAMP,iBAAiB,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF,eAQE;AAAK,QAAA,KAAK,EAAExB,KAAK,CAACgC,SAAlB;AAAA,+BACE;AACE,UAAA,QAAQ,EAAGX,CAAD,IAAO;AACfA,YAAAA,CAAC,CAACY,cAAF,GADe,CAEf;;AACA,kBAAMC,SAAS,GAAGlB,WAAH,aAAGA,WAAH,uBAAGA,WAAW,CAAEmB,WAAb,EAAlB;AACAjC,YAAAA,QAAQ,CAACV,cAAc,CAAC0C,SAAD,CAAf,CAAR;AACAjB,YAAAA,cAAc,CAAC,EAAD,CAAd;AACD,WAPH;AAAA,kCASE;AACE,YAAA,KAAK,EAAEjB,KAAK,CAACoC,IADf;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,WAAW,EAAC,gBAHd;AAIE,YAAA,KAAK,EAAEpB,WAJT;AAKE,YAAA,QAAQ,EAAGK,CAAD,IAAOJ,cAAc,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV;AALjC;AAAA;AAAA;AAAA;AAAA,kBATF,eAgBE;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,KAAK,EAAC,SAA3B;AAAqC,YAAA,KAAK,EAAEvB,KAAK,CAACqC;AAAlD;AAAA;AAAA;AAAA;AAAA,kBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF,eA4BE,QAAC,OAAD;AAAS,QAAA,EAAE,EAAC,SAAZ;AAAA,+BACE;AAAQ,UAAA,KAAK,EAAErC,KAAK,CAACsC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA5BF,eAgCE;AAAK,QAAA,KAAK,EAAEtC,KAAK,CAACkB,KAAlB;AAAA,gCACE;AAAG,UAAA,KAAK,EAAElB,KAAK,CAACuC,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAuB,UAAA,QAAQ,EAAGlB,CAAD,IAAOO,qBAAqB,CAACP,CAAD,CAA7D;AAAA,kCACE;AAAQ,YAAA,KAAK,EAAErB,KAAK,CAACwC,GAArB;AAA0B,YAAA,KAAK,EAAC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAQ,YAAA,KAAK,EAAExC,KAAK,CAACwC,GAArB;AAA0B,YAAA,KAAK,EAAC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAOE;AAAQ,YAAA,KAAK,EAAExC,KAAK,CAACwC,GAArB;AAA0B,YAAA,KAAK,EAAC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAaE;AACE,UAAA,IAAI,EAAC,eADP;AAEE,UAAA,QAAQ,EAAGnB,CAAD,IAAOK,2BAA2B,CAACL,CAAD,CAF9C;AAAA,kCAIE;AAAQ,YAAA,KAAK,EAAErB,KAAK,CAACwC,GAArB;AAA0B,YAAA,KAAK,EAAC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAOE;AAAQ,YAAA,KAAK,EAAExC,KAAK,CAACwC,GAArB;AAA0B,YAAA,KAAK,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,eAUE;AAAQ,YAAA,KAAK,EAAExC,KAAK,CAACwC,GAArB;AAA0B,YAAA,KAAK,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,cAhCF,eA6DE;AAAK,QAAA,KAAK,EAAExC,KAAK,CAACyC,OAAlB;AAAA,gCACE;AAAG,UAAA,KAAK,EAAEzC,KAAK,CAACuC,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,IAAI,EAAC,OAAb;AAAqB,UAAA,QAAQ,EAAGlB,CAAD,IAAOD,mBAAmB,CAACC,CAAD,CAAzD;AAAA,kCACE;AAAQ,YAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGlB,KAAK,CAACuC,GAAN,CAAWC,IAAD,IAAU;AACnB,gCACE;AAAQ,cAAA,KAAK,EAAG,GAAEA,IAAI,CAACC,IAAK,EAA5B;AAAA,wBACGD,IAAI,CAACC;AADR,eAAoCD,IAAI,CAACC,IAAzC;AAAA;AAAA;AAAA;AAAA,oBADF;AAKD,WANA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAYE;AACE,UAAA,IAAI,EAAC,aADP;AAEE,UAAA,QAAQ,EAAGvB,CAAD,IAAOI,yBAAyB,CAACJ,CAAD,CAF5C;AAAA,kCAIE;AAAQ,YAAA,KAAK,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAQ,YAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAQ,YAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,cA7DF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAoFE,QAAC,QAAD;AACE,MAAA,eAAe,EAAEb,eADnB;AAEE,MAAA,QAAQ,EAAEH,QAAQ,CAACwC,MAFrB;AAGE,MAAA,QAAQ,EAAE/B;AAHZ;AAAA;AAAA;AAAA;AAAA,YApFF,eA0FE,QAAC,QAAD;AAAU,MAAA,eAAe,EAAEF;AAA3B;AAAA;AAAA;AAAA;AAAA,YA1FF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8FD;;GA3JuBX,I;UACLf,W,EACHC,W,EACGA,W;;;KAHKc,I","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  getPokemons,\n  getTypes,\n  getPokemonsByTypes,\n  getPokemonName,\n  clearStates,\n  createdOrDB,\n  orderAZ,\n  orderStrength,\n  getPokemonsId,\n} from \"../../actions\";\nimport Pokemons from \"../pokemons/Pokemons.jsx\";\nimport Paginado from \"../paginado/Paginado.jsx\";\nimport style from \"./Home.module.css\";\n\nexport default function Home() {\n  const dispatch = useDispatch(); //Guardo el dispatch en la constante para poder despachar las actions donde quiera\n  const types = useSelector((state) => state.types); //me guardo el array types del estado\n  const pokemons = useSelector((state) => state.pokemons); //me guardo el array pokemmons del estado (tiene todos los pokemons)\n\n  //------------------------------PAGINADO-----------------------------------------------------\n  const [currentPage, setCurrentPage] = useState(1); //Estado Local de paginado\n  const [pokemonsPerPage, setPokemonsPerPage] = useState(9); //Digo en parametros de useState cuantos personajes por pagina quiero\n  const indexLastPokemon = currentPage * pokemonsPerPage; //Ultimo poke en la pagina. (Pagina 1 seria index 9)\n  const indexFirstPokemon = indexLastPokemon - pokemonsPerPage; //Index del primer poke de la pagina\n  const currentPokemons = pokemons.slice(indexFirstPokemon, indexLastPokemon); //Selecciono la cantidad de pokemons que quiero que se muestren con los index\n  const paginado = (nroPag) => {\n    setCurrentPage(nroPag);\n  };\n\n  //----------------------------LOCAL STATES---------------------------------------------------\n  const [pokemonName, setPokemonName] = useState(); //ESTADO LOCAL SEARCHBAR\n  const [orden, setOrden] = useState(\"\"); //ESTADOS LOCAL ORDEN\n\n  useEffect(() => {\n    //Aca despacho las 2 actions para que cuando se monte el componente los tenga en el estado\n    dispatch(getTypes());\n    dispatch(getPokemons());\n  }, []);\n\n  //----------------FILTRO TYPES----------------------------------\n  const handleOnChangeTypes = (e) => {\n    //Funcion onChange de SelectFiltrosTypes\n    //console.log(e.target.value);\n    dispatch(getPokemonsByTypes(e.target.value));\n  };\n\n  //--------------BOTON HOME---------------------\n  const handleOnClickHome = () => {\n    dispatch(clearStates());\n    setCurrentPage(1);\n  };\n\n  //-----------FILTRO API O DB-----------------------------------\n  const handleOnChangeCreatedOrDB = (e) => {\n    //console.log(e.target.value);\n    dispatch(createdOrDB(e.target.value));\n  };\n\n  //--------------ORDENAMIENTOS-----------------------------------\n  const handleOnChangeOrderStrength = (e) => {\n    const result = e.target.value;\n    //console.log(result);\n    result === \"default\"\n      ? dispatch(getPokemons())\n      : dispatch(orderStrength(result));\n    setOrden(`Ordenado ${e.target.value}`);\n  };\n\n  const handleOnChangeOrderAZ = (e) => {\n    const result = e.target.value;\n    //console.log(result);\n    result === \"default\" ? dispatch(getPokemons()) : dispatch(orderAZ(result));\n    setOrden(`Ordenado ${e.target.value}`);\n  };\n\n  return (\n    <div class={style.container}>\n      <div class={style.nav}>\n        {/*-----------------NAV--------------------- */}\n        <NavLink to=\"/\" >\n          <button>Leave</button>\n        </NavLink>\n        <NavLink to=\"/home\" class={style.buttonHome}>\n          <button onClick={() => handleOnClickHome()}>Home</button>\n        </NavLink>\n        <div class={style.searchBar}>\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n              //console.log(pokemon);\n              const respuesta = pokemonName?.toLowerCase();\n              dispatch(getPokemonName(respuesta));\n              setPokemonName(\"\");\n            }}\n          >\n            <input\n              class={style.text}\n              type=\"text\"\n              placeholder=\"Poke Search...\"\n              value={pokemonName}\n              onChange={(e) => setPokemonName(e.target.value)}\n            />\n            <input type=\"submit\" value=\"Search!\" class={style.submit} />\n          </form>\n        </div>\n        <NavLink to=\"/create\">\n          <button class={style.buttonCreate}>Create</button>\n        </NavLink>\n        {/*-----------------------------ORDENAMIENTOS-------------------------- */}\n        <div class={style.orden}>\n          <p class={style.p}>Orden: </p>\n          <select name=\"ordenAZ\" onChange={(e) => handleOnChangeOrderAZ(e)}>\n            <option class={style.opt} value=\"default\">\n              Default\n            </option>\n            <option class={style.opt} value=\"az\">\n              A - Z\n            </option>\n            <option class={style.opt} value=\"za\">\n              Z - A\n            </option>\n          </select>\n          <select\n            name=\"ordenStrength\"\n            onChange={(e) => handleOnChangeOrderStrength(e)}\n          >\n            <option class={style.opt} value=\"default\">\n              Default\n            </option>\n            <option class={style.opt} value=\"strength+-\">\n              ↑Attack - ↓Attack\n            </option>\n            <option class={style.opt} value=\"strength-+\">\n              ↓Attack - ↑Attack\n            </option>\n          </select>\n        </div>\n        {/*-----------------------------FILTROS-------------------------- */}\n        <div class={style.filtros}>\n          <p class={style.p}>Filtros: </p>\n          <select name=\"types\" onChange={(e) => handleOnChangeTypes(e)}>\n            <option value=\"allTypes\">All Types</option>\n            {types.map((type) => {\n              return (\n                <option value={`${type.name}`} key={type.name}>\n                  {type.name}\n                </option>\n              );\n            })}\n          </select>\n          <select\n            name=\"createdOrDB\"\n            onChange={(e) => handleOnChangeCreatedOrDB(e)}\n          >\n            <option value=\"allPokemons\">All Pokemons</option>\n            <option value=\"DB\">Created</option>\n            <option value=\"api\">Exists</option>\n          </select>\n        </div>\n      </div>\n      <Paginado\n        pokemonsPerPage={pokemonsPerPage}\n        pokemons={pokemons.length}\n        paginado={paginado}\n      />\n      {/*-----------------------------BODY-------------------------- */}\n      <Pokemons currentPokemons={currentPokemons} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}