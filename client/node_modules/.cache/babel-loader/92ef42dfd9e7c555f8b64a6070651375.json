{"ast":null,"code":"import { CLEAR_STATES, GET_POKEMONS, GET_POKEMON_ID, GET_POKEMON_NAME, GET_TYPES, POST_POKEMON, GET_POKEMONS_BY_TYPES, CREATED_OR_DB, ORDER_AZ, ORDER_STRENGTH } from \"../actions\"; //----------ESTADO INICIAL------------------\n\nlet initialState = {\n  pokemons: [],\n  allPokemons: [],\n  pokemonDetail: [],\n  types: [],\n  pokemonsBuscados: null\n}; //-----------------------REDUCER--------------------------\n\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_POKEMONS:\n      console.log('Pokemones Cargados!');\n      return { ...state,\n        pokemons: action.payload,\n        allPokemons: action.payload\n      };\n\n    case GET_POKEMON_ID:\n      return { ...state,\n        pokemonDetail: action.payload\n      };\n\n    case GET_POKEMON_NAME:\n      //console.log('Estoy en reducer: ', action.payload)    \n      let poke = action.payload; //console.log(poke)\n\n      return { ...state,\n        pokemonsBuscados: poke\n      };\n\n    case GET_TYPES:\n      return { ...state,\n        types: action.payload\n      };\n\n    case GET_POKEMONS_BY_TYPES:\n      let type = action.payload; //console.log(\"Estoy en reducer \" + type)\n\n      let allPokemons = state.allPokemons;\n\n      const mapTypes = types => {\n        let nuevosTypes = [];\n        types.filter(type => nuevosTypes.push(type.name));\n        return nuevosTypes; //console.log(\"Entre!\", nuevosTypes);\n      };\n\n      let pokesByTypes = type === 'allTypes' ? allPokemons : allPokemons.filter(poke => mapTypes(poke.types)); //console.log(pokesByTypes)\n\n      return { ...state,\n        pokemons: pokesByTypes\n      };\n\n    case CLEAR_STATES:\n      console.log('Pokemons Re-Loaded');\n      return { ...state,\n        pokemonDetail: [],\n        pokemonsBuscados: null,\n        pokemons: state.allPokemons\n      };\n\n    case CREATED_OR_DB:\n      //console.log('Estoy en reducer', action.payload)\n      if (action.payload === 'allPokemons') {\n        //console.log('ESTOY EN FILTRO ALLPOKES')\n        return { ...state,\n          pokemons: state.allPokemons\n        };\n      }\n\n      if (action.payload === 'api') {\n        //console.log('ESTOY EN FILTRO API')\n        const allPokes = state.allPokemons;\n        const respuesta = allPokes.filter(poke => poke.id < 800);\n        return { ...state,\n          pokemons: respuesta\n        };\n      }\n\n      if (action.payload === 'DB') {\n        //console.log('ESTOY EN FILTRO DB')\n        const allPokes = state.allPokemons;\n        const respuesta = allPokes.filter(poke => poke.id.length > 15); //console.log(respuesta)\n\n        return { ...state,\n          pokemons: respuesta\n        };\n      }\n\n    case ORDER_AZ:\n      let arrayOrder = action.payload === 'az' ? state.pokemons.sort((a, b) => {\n        if (a.name > b.name) return 1;else if (b.name > a.name) return -1;else return 0;\n      }) : state.pokemons.sort((a, b) => {\n        if (a.name > b.name) return -1;else if (b.name > a.name) return 1;else return 0;\n      });\n      return { ...state,\n        pokemons: arrayOrder\n      };\n\n    case ORDER_STRENGTH:\n      //console.log(action.payload)\n      let arrayStrengthOrder = action.payload === 'strength+-' ? state.pokemons.sort((a, b) => {\n        if (a.strength < b.strength) return 1;else if (b.strength < a.strength) return -1;else return 0;\n      }) : state.pokemons.sort((a, b) => {\n        if (a.strength < b.strength) return -1;else if (b.strength < a.strength) return 1;else return 0;\n      });\n      return { ...state,\n        pokemons: arrayStrengthOrder\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["/home/ramiro/Desktop/PI-Pokemon-main/client/src/reducer/index.js"],"names":["CLEAR_STATES","GET_POKEMONS","GET_POKEMON_ID","GET_POKEMON_NAME","GET_TYPES","POST_POKEMON","GET_POKEMONS_BY_TYPES","CREATED_OR_DB","ORDER_AZ","ORDER_STRENGTH","initialState","pokemons","allPokemons","pokemonDetail","types","pokemonsBuscados","rootReducer","state","action","type","console","log","payload","poke","mapTypes","nuevosTypes","filter","push","name","pokesByTypes","allPokes","respuesta","id","length","arrayOrder","sort","a","b","arrayStrengthOrder","strength"],"mappings":"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","sourcesContent":["import {\n    CLEAR_STATES,\n    GET_POKEMONS,\n    GET_POKEMON_ID,\n    GET_POKEMON_NAME,\n    GET_TYPES,\n    POST_POKEMON,\n    GET_POKEMONS_BY_TYPES,\n    CREATED_OR_DB,\n    ORDER_AZ,\n    ORDER_STRENGTH,\n} from \"../actions\";\n\n//----------ESTADO INICIAL------------------\nlet initialState = {\n    pokemons: [],\n    allPokemons: [],\n    pokemonDetail: [],\n    types: [],\n    pokemonsBuscados: null,\n}\n\n//-----------------------REDUCER--------------------------\nfunction rootReducer(state = initialState, action) {\n    switch (action.type) {\n        case GET_POKEMONS:\n            console.log('Pokemones Cargados!')\n            return {\n                ...state,\n                pokemons: action.payload,\n                allPokemons: action.payload,\n            }\n        case GET_POKEMON_ID:\n            return {\n                ...state,\n                pokemonDetail: action.payload,\n            }\n        case GET_POKEMON_NAME:\n            //console.log('Estoy en reducer: ', action.payload)    \n            let poke = action.payload;\n            //console.log(poke)\n            return {\n                ...state,\n                pokemonsBuscados: poke\n            }\n        case GET_TYPES:\n            return {\n                ...state,\n                types: action.payload,\n            }\n        case GET_POKEMONS_BY_TYPES:\n            let type = action.payload;\n            //console.log(\"Estoy en reducer \" + type)\n            let allPokemons = state.allPokemons;\n\n            const mapTypes = (types) => {\n                let nuevosTypes = [];\n                types.filter((type) => nuevosTypes.push(type.name));\n                return nuevosTypes;\n                //console.log(\"Entre!\", nuevosTypes);\n            }\n\n            let pokesByTypes = type === 'allTypes' ?\n                allPokemons :\n                allPokemons.filter((poke) => mapTypes(poke.types))\n            //console.log(pokesByTypes)\n\n            return {\n                ...state,\n                pokemons: pokesByTypes,\n            }\n        case CLEAR_STATES:\n            console.log('Pokemons Re-Loaded')\n            return {\n                ...state,\n                pokemonDetail: [],\n                pokemonsBuscados: null,\n                pokemons: state.allPokemons,\n            }\n        case CREATED_OR_DB:\n            //console.log('Estoy en reducer', action.payload)\n            if (action.payload === 'allPokemons') {\n                //console.log('ESTOY EN FILTRO ALLPOKES')\n\n                return {\n                    ...state,\n                    pokemons: state.allPokemons\n                }\n            }\n            if (action.payload === 'api') {\n                //console.log('ESTOY EN FILTRO API')\n\n                const allPokes = state.allPokemons;\n                const respuesta = allPokes.filter((poke) => poke.id < 800)\n                return {\n                    ...state,\n                    pokemons: respuesta,\n                }\n            }\n            if (action.payload === 'DB') {\n                //console.log('ESTOY EN FILTRO DB')\n\n                const allPokes = state.allPokemons;\n                const respuesta = allPokes.filter((poke) => poke.id.length > 15)\n                //console.log(respuesta)\n                return {\n                    ...state,\n                    pokemons: respuesta,\n                }\n            }\n        case ORDER_AZ:\n\n            let arrayOrder = action.payload === 'az' ? state.pokemons.sort((a, b) => {\n                if (a.name > b.name) return 1;\n                else if (b.name > a.name) return -1;\n                else return 0;\n            }) :\n                state.pokemons.sort((a, b) => {\n                    if (a.name > b.name) return -1;\n                    else if (b.name > a.name) return 1;\n                    else return 0;\n                })\n            return {\n                ...state,\n                pokemons: arrayOrder\n            }\n\n\n        case ORDER_STRENGTH:\n            //console.log(action.payload)\n            let arrayStrengthOrder = action.payload === 'strength+-' ? state.pokemons.sort((a, b) => {\n                if (a.strength < b.strength) return 1;\n                else if (b.strength < a.strength) return -1;\n                else return 0;\n            }) :\n                state.pokemons.sort((a, b) => {\n                    if (a.strength < b.strength) return -1;\n                    else if (b.strength < a.strength) return 1;\n                    else return 0;\n                })\n            return {\n                ...state,\n                pokemons: arrayStrengthOrder,\n            }\n        default:\n            return state;\n    }\n}\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}