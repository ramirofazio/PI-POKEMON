{"ast":null,"code":"import axios from 'axios';\nexport const GET_POKEMONS = 'GET_POKEMONS';\nexport const GET_POKEMON_ID = 'GET_POKEMON_ID';\nexport const GET_POKEMON_NAME = 'GET_POKEMON_NAME';\nexport const GET_TYPES = 'GET_TYPES';\nexport const POST_POKEMON = 'POST_POKEMON';\nexport const GET_POKEMONS_BY_TYPES = 'GET_POKEMONS_BY_TYPES';\nexport const CLEAR_STATES = 'CLEAR_STATES';\nexport const CREATED_OR_DB = 'CREATED_OR_DB';\nexport const ORDER_AZ = 'ORDER_AZ';\nexport const ORDER_STRENGTH = 'ORDER_STRENGTH';\nexport function getPokemons() {\n  console.log('Buscando Pokemons...');\n  return function (dispatch) {\n    axios.get('http://localhost:3001/pokemons').then(res => {\n      return dispatch({\n        type: GET_POKEMONS,\n        payload: res.data //Arreglo con pokemons del BackEnd\n\n      });\n    }).catch(e => console.log(e));\n  };\n}\nexport function getPokemonsId(id) {\n  return async function (dispatch) {\n    const pokeId = (await axios.get(`http://localhost:3001/pokemons/?id=${id}`)).data;\n    return dispatch({\n      type: GET_POKEMON_ID,\n      payload: pokeId //Arreglo con detalles del poke id]\n\n    });\n  };\n}\nexport function getPokemonName(name) {\n  return async function (dispatch) {\n    try {\n      //console.log(name)\n      const pokeName = (await axios.get(`http://localhost:3001/pokemons/?name=${name}`)).data;\n      return dispatch({\n        type: GET_POKEMON_NAME,\n        payload: pokeName //Arreglo con detalle del poke Name\n\n      });\n    } catch {\n      alert('Poke Search Fail!');\n    }\n  };\n}\nexport function getTypes() {\n  return async function (dispatch) {\n    const types = (await axios.get('http://localhost:3001/types')).data;\n    return dispatch({\n      type: GET_TYPES,\n      payload: types //Arreglo con types\n\n    });\n  };\n}\nexport function postPokemon({\n  name,\n  hp,\n  strength,\n  defense,\n  speed,\n  height,\n  weight,\n  img,\n  types\n}) {\n  //Destructuring del objeto que te pasan\n  //Crear poke en la DB\n  //img === \"\" ? img = \"https://i.pinimg.com/originals/84/7b/e7/847be709c5ce344245b6503cacb706ee.png\" : null;\n  return async function () {\n    axios.post('http://localhost:3001/pokemons', {\n      name: name,\n      hp: hp,\n      strength: strength,\n      defense: defense,\n      speed: speed,\n      height: height,\n      weight: weight,\n      img: img,\n      types: types\n    });\n  };\n}\nexport function getPokemonsByTypes(type) {\n  return function (dispatch) {\n    //console.log(type)\n    return dispatch({\n      type: GET_POKEMONS_BY_TYPES,\n      payload: type\n    });\n  };\n}\nexport function clearStates() {\n  return function (dispatch) {\n    return dispatch({\n      type: CLEAR_STATES\n    });\n  };\n}\nexport function createdOrDB(value) {\n  return function (dispatch) {\n    //console.log('Estoy en actions', value)\n    return dispatch({\n      type: CREATED_OR_DB,\n      payload: value\n    });\n  };\n}\nexport function orderAZ(order) {\n  //console.log('Entre a actions AZ ', value)\n  return function (dispatch) {\n    return dispatch({\n      type: ORDER_AZ,\n      payload: order\n    });\n  };\n}\nexport function orderStrength(value) {\n  //console.log('Entre a actions Strength ', value)\n  return function (dispatch) {\n    return dispatch({\n      type: ORDER_STRENGTH,\n      payload: value\n    });\n  };\n}","map":{"version":3,"sources":["/home/ramiro/Desktop/PI-Pokemon-main/client/src/actions/index.js"],"names":["axios","GET_POKEMONS","GET_POKEMON_ID","GET_POKEMON_NAME","GET_TYPES","POST_POKEMON","GET_POKEMONS_BY_TYPES","CLEAR_STATES","CREATED_OR_DB","ORDER_AZ","ORDER_STRENGTH","getPokemons","console","log","dispatch","get","then","res","type","payload","data","catch","e","getPokemonsId","id","pokeId","getPokemonName","name","pokeName","alert","getTypes","types","postPokemon","hp","strength","defense","speed","height","weight","img","post","getPokemonsByTypes","clearStates","createdOrDB","value","orderAZ","order","orderStrength"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nexport const GET_POKEMONS = 'GET_POKEMONS';\nexport const GET_POKEMON_ID = 'GET_POKEMON_ID';\nexport const GET_POKEMON_NAME = 'GET_POKEMON_NAME';\nexport const GET_TYPES = 'GET_TYPES'\nexport const POST_POKEMON = 'POST_POKEMON';\nexport const GET_POKEMONS_BY_TYPES = 'GET_POKEMONS_BY_TYPES';\nexport const CLEAR_STATES = 'CLEAR_STATES';\nexport const CREATED_OR_DB = 'CREATED_OR_DB';\nexport const ORDER_AZ = 'ORDER_AZ';\nexport const ORDER_STRENGTH = 'ORDER_STRENGTH';\n\n\nexport function getPokemons() {\n    console.log('Buscando Pokemons...')\n    return function (dispatch) {\n\n\n        axios.get('http://localhost:3001/pokemons').then((res) => {\n            return dispatch({\n                type: GET_POKEMONS,\n                payload: res.data//Arreglo con pokemons del BackEnd\n            })\n        }).catch((e) => console.log(e))\n\n    }\n}\n\nexport function getPokemonsId(id) {\n    return async function (dispatch) {\n\n        const pokeId = (await axios.get(`http://localhost:3001/pokemons/?id=${id}`)).data;\n\n        return dispatch({\n            type: GET_POKEMON_ID,\n            payload: pokeId//Arreglo con detalles del poke id]\n        })\n    }\n}\n\nexport function getPokemonName(name) {\n    return async function (dispatch) {\n        try {\n            //console.log(name)\n            const pokeName = (await axios.get(`http://localhost:3001/pokemons/?name=${name}`)).data;\n            return dispatch({\n                type: GET_POKEMON_NAME,\n                payload: pokeName //Arreglo con detalle del poke Name\n            })\n        } catch {\n            alert('Poke Search Fail!')\n        }\n    }\n}\n\nexport function getTypes() {\n    return async function (dispatch) {\n        const types = (await axios.get('http://localhost:3001/types')).data;\n\n        return dispatch({\n            type: GET_TYPES,\n            payload: types, //Arreglo con types\n        })\n    }\n}\n\nexport function postPokemon({ name, hp, strength, defense, speed, height, weight, img, types }) {//Destructuring del objeto que te pasan\n    //Crear poke en la DB\n\n    //img === \"\" ? img = \"https://i.pinimg.com/originals/84/7b/e7/847be709c5ce344245b6503cacb706ee.png\" : null;\n    return async function () {\n        axios.post('http://localhost:3001/pokemons', {\n            name: name,\n            hp: hp,\n            strength: strength,\n            defense: defense,\n            speed: speed,\n            height: height,\n            weight: weight,\n            img: img,\n            types: types\n        })\n    }\n}\n\nexport function getPokemonsByTypes(type) {\n    return function (dispatch) {\n        //console.log(type)\n        return dispatch({\n            type: GET_POKEMONS_BY_TYPES,\n            payload: type,\n        })\n    }\n}\n\nexport function clearStates() {\n    return function (dispatch) {\n        return dispatch({\n            type: CLEAR_STATES,\n        })\n    }\n}\n\nexport function createdOrDB(value) {\n    return function (dispatch) {\n        //console.log('Estoy en actions', value)\n        return dispatch({\n            type: CREATED_OR_DB,\n            payload: value\n        })\n    }\n}\n\nexport function orderAZ(order) {\n    //console.log('Entre a actions AZ ', value)\n    return function (dispatch) {\n        return dispatch({\n            type: ORDER_AZ,\n            payload: order,\n        })\n    }\n}\n\nexport function orderStrength(value) {\n    //console.log('Entre a actions Strength ', value)\n    return function (dispatch) {\n        return dispatch({\n            type: ORDER_STRENGTH,\n            payload: value,\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}