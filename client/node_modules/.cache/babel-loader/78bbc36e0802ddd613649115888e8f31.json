{"ast":null,"code":"import axios from 'axios';\nexport const GET_POKEMONS = 'GET_POKEMONS';\nexport const GET_POKEMON_ID = 'GET_POKEMON_ID';\nexport const GET_POKEMON_NAME = 'GET_POKEMON_NAME';\nexport const GET_TYPES = 'GET_TYPES';\nexport const POST_POKEMON = 'POST_POKEMON';\nexport function getPokemons() {\n  return function (dispatch) {\n    const pokes = axios.get('localhost:3001/pokemons').data;\n    return dispatch({\n      type: GET_POKEMONS,\n      payload: pokes //Arreglo con pokemons del BackEnd\n\n    });\n  };\n}\nexport function getPokemonsId(id) {\n  return function (dispatch) {\n    const pokeId = axios.get(`localhost:3001/pokemons/${id}`).data;\n    return dispatch({\n      type: GET_POKEMON_ID,\n      payload: pokeId //Arreglo con detalles del poke id]\n\n    });\n  };\n}\nexport function getPokemonName(name) {\n  return function (dispatch) {\n    const pokeName = axios.get(`localhost:3001/pokemons/${name}`).data;\n    return dispatch({\n      type: GET_POKEMON_NAME,\n      payload: pokeName //Arreglo con detalle del poke Name\n\n    });\n  };\n}\nexport function getTypes() {\n  return async function (dispatch) {\n    const types = (await axios.get('localhost:3001/types')).data;\n    return dispatch({\n      type: GET_TYPES,\n      payload: types //Arreglo con types\n\n    });\n  };\n}\nexport function postPokemon({\n  name,\n  hp,\n  height,\n  weight,\n  strength,\n  types\n}) {//Destructuring del objeto que te pasan\n  //Crear poke en la DB\n}","map":{"version":3,"sources":["/home/ramiro/Desktop/PI-Pokemon-main/client/src/actions/index.js"],"names":["axios","GET_POKEMONS","GET_POKEMON_ID","GET_POKEMON_NAME","GET_TYPES","POST_POKEMON","getPokemons","dispatch","pokes","get","data","type","payload","getPokemonsId","id","pokeId","getPokemonName","name","pokeName","getTypes","types","postPokemon","hp","height","weight","strength"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AAGP,OAAO,SAASC,WAAT,GAAuB;AAC1B,SAAO,UAAUC,QAAV,EAAoB;AAEvB,UAAMC,KAAK,GAAIR,KAAK,CAACS,GAAN,CAAU,yBAAV,CAAD,CAAuCC,IAArD;AAEA,WAAOH,QAAQ,CAAC;AACZI,MAAAA,IAAI,EAAEV,YADM;AAEZW,MAAAA,OAAO,EAAEJ,KAFG,CAEE;;AAFF,KAAD,CAAf;AAIH,GARD;AASH;AAED,OAAO,SAASK,aAAT,CAAuBC,EAAvB,EAA2B;AAC9B,SAAO,UAAUP,QAAV,EAAoB;AAEvB,UAAMQ,MAAM,GAAIf,KAAK,CAACS,GAAN,CAAW,2BAA0BK,EAAG,EAAxC,CAAD,CAA6CJ,IAA5D;AAEA,WAAOH,QAAQ,CAAC;AACZI,MAAAA,IAAI,EAAET,cADM;AAEZU,MAAAA,OAAO,EAAEG,MAFG,CAEG;;AAFH,KAAD,CAAf;AAIH,GARD;AASH;AAED,OAAO,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AACjC,SAAO,UAAUV,QAAV,EAAoB;AAEvB,UAAMW,QAAQ,GAAKlB,KAAK,CAACS,GAAN,CAAW,2BAA0BQ,IAAK,EAA1C,CAAF,CAAgDP,IAAjE;AAEA,WAAOH,QAAQ,CAAC;AACZI,MAAAA,IAAI,EAAER,gBADM;AAEZS,MAAAA,OAAO,EAAEM,QAFG,CAEM;;AAFN,KAAD,CAAf;AAIH,GARD;AASH;AAED,OAAO,SAASC,QAAT,GAAoB;AACvB,SAAO,gBAAgBZ,QAAhB,EAA0B;AAC7B,UAAMa,KAAK,GAAG,CAAC,MAAMpB,KAAK,CAACS,GAAN,CAAU,sBAAV,CAAP,EAA0CC,IAAxD;AAEA,WAAOH,QAAQ,CAAC;AACZI,MAAAA,IAAI,EAAEP,SADM;AAEZQ,MAAAA,OAAO,EAAEQ,KAFG,CAEI;;AAFJ,KAAD,CAAf;AAIH,GAPD;AAQH;AAED,OAAO,SAASC,WAAT,CAAqB;AAAEJ,EAAAA,IAAF;AAAQK,EAAAA,EAAR;AAAYC,EAAAA,MAAZ;AAAoBC,EAAAA,MAApB;AAA4BC,EAAAA,QAA5B;AAAsCL,EAAAA;AAAtC,CAArB,EAAoE,CAAC;AACxE;AACH","sourcesContent":["import axios from 'axios';\n\nexport const GET_POKEMONS = 'GET_POKEMONS';\nexport const GET_POKEMON_ID = 'GET_POKEMON_ID';\nexport const GET_POKEMON_NAME = 'GET_POKEMON_NAME';\nexport const GET_TYPES = 'GET_TYPES'\nexport const POST_POKEMON = 'POST_POKEMON'; \n\n\nexport function getPokemons() {\n    return function (dispatch) {\n\n        const pokes = (axios.get('localhost:3001/pokemons')).data;\n\n        return dispatch({\n            type: GET_POKEMONS,\n            payload: pokes//Arreglo con pokemons del BackEnd\n        })\n    }\n}\n\nexport function getPokemonsId(id) {\n    return function (dispatch) {\n\n        const pokeId = (axios.get(`localhost:3001/pokemons/${id}`)).data;\n\n        return dispatch({\n            type: GET_POKEMON_ID,\n            payload: pokeId//Arreglo con detalles del poke id]\n        })\n    }\n}\n\nexport function getPokemonName(name) {\n    return function (dispatch) {\n\n        const pokeName = ( axios.get(`localhost:3001/pokemons/${name}`)).data;\n\n        return dispatch({\n            type: GET_POKEMON_NAME,\n            payload: pokeName //Arreglo con detalle del poke Name\n        })\n    }\n}\n\nexport function getTypes() {\n    return async function (dispatch) {\n        const types = (await axios.get('localhost:3001/types')).data;\n\n        return dispatch({\n            type: GET_TYPES,\n            payload: types, //Arreglo con types\n        })\n    }\n}\n\nexport function postPokemon({ name, hp, height, weight, strength, types }) {//Destructuring del objeto que te pasan\n    //Crear poke en la DB\n}"]},"metadata":{},"sourceType":"module"}