{"ast":null,"code":"import { CLEAR_STATES, GET_POKEMONS, GET_POKEMON_ID, GET_POKEMON_NAME } from \"../actions\";\nimport \"../actions\";\nimport \"../actions\";\nimport { POST_POKEMON } from \"../actions\";\nimport { GET_POKEMONS_BY_TYPES } from '../actions';\nlet initialState = {\n  pokemons: [],\n  allPokemons: [],\n  pokemonDetail: [],\n  types: [],\n  pokemonsBuscados: null\n};\n\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_POKEMONS:\n      return { ...state,\n        pokemons: action.payload,\n        allPokemons: action.payload\n      };\n\n    case GET_POKEMON_ID:\n      return { ...state,\n        pokemonDetail: action.payload\n      };\n\n    case GET_POKEMON_NAME:\n      //console.log('Estoy en reducer: ', action.payload)    \n      let poke = action.payload; //console.log(poke)\n\n      return { ...state,\n        pokemonsBuscados: poke\n      };\n\n    case GET_TYPES:\n      return { ...state,\n        types: action.payload\n      };\n\n    case GET_POKEMONS_BY_TYPES:\n      let type = action.payload;\n      let allPokemons = state.allPokemons;\n      let pokesByTypes = type === 'allTypes' ? allPokemons : allPokemons.filter(pokes => pokes.types.includes(type));\n      return { ...state,\n        pokemons: pokesByTypes\n      };\n\n    case CLEAR_STATES:\n      return {};\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["/home/ramiro/Desktop/PI-Pokemon-main/client/src/reducer/index.js"],"names":["CLEAR_STATES","GET_POKEMONS","GET_POKEMON_ID","GET_POKEMON_NAME","POST_POKEMON","GET_POKEMONS_BY_TYPES","initialState","pokemons","allPokemons","pokemonDetail","types","pokemonsBuscados","rootReducer","state","action","type","payload","poke","GET_TYPES","pokesByTypes","filter","pokes","includes"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,YAAvB,EAAqCC,cAArC,EAAqDC,gBAArD,QAA+E,YAA/E;AACA,OAAiB,YAAjB;AACA,OAAiB,YAAjB;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,SAASC,qBAAT,QAAsC,YAAtC;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,QAAQ,EAAE,EADK;AAEfC,EAAAA,WAAW,EAAE,EAFE;AAGfC,EAAAA,aAAa,EAAE,EAHA;AAIfC,EAAAA,KAAK,EAAE,EAJQ;AAKfC,EAAAA,gBAAgB,EAAE;AALH,CAAnB;;AAQA,SAASC,WAAT,CAAqBC,KAAK,GAAGP,YAA7B,EAA2CQ,MAA3C,EAAmD;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKd,YAAL;AACI,aAAO,EACH,GAAGY,KADA;AAEHN,QAAAA,QAAQ,EAAEO,MAAM,CAACE,OAFd;AAGHR,QAAAA,WAAW,EAAEM,MAAM,CAACE;AAHjB,OAAP;;AAKJ,SAAKd,cAAL;AACI,aAAO,EACH,GAAGW,KADA;AAEHJ,QAAAA,aAAa,EAAEK,MAAM,CAACE;AAFnB,OAAP;;AAIJ,SAAKb,gBAAL;AACI;AACA,UAAIc,IAAI,GAAGH,MAAM,CAACE,OAAlB,CAFJ,CAGI;;AACA,aAAO,EACH,GAAGH,KADA;AAEHF,QAAAA,gBAAgB,EAAEM;AAFf,OAAP;;AAIJ,SAAKC,SAAL;AACI,aAAO,EACH,GAAGL,KADA;AAEHH,QAAAA,KAAK,EAAEI,MAAM,CAACE;AAFX,OAAP;;AAIJ,SAAKX,qBAAL;AACI,UAAIU,IAAI,GAAGD,MAAM,CAACE,OAAlB;AACA,UAAIR,WAAW,GAAGK,KAAK,CAACL,WAAxB;AACA,UAAIW,YAAY,GAAGJ,IAAI,KAAK,UAAT,GACfP,WADe,GAEfA,WAAW,CAACY,MAAZ,CAAoBC,KAAD,IAAWA,KAAK,CAACX,KAAN,CAAYY,QAAZ,CAAqBP,IAArB,CAA9B,CAFJ;AAIA,aAAO,EACH,GAAGF,KADA;AAEHN,QAAAA,QAAQ,EAAEY;AAFP,OAAP;;AAIJ,SAAKnB,YAAL;AACI,aAAO,EAAP;;AAGJ;AACI,aAAOa,KAAP;AAzCR;AA2CH;;AAED,eAAeD,WAAf","sourcesContent":["import { CLEAR_STATES, GET_POKEMONS, GET_POKEMON_ID, GET_POKEMON_NAME,  } from \"../actions\";\nimport {  } from \"../actions\";\nimport {  } from \"../actions\";\nimport { POST_POKEMON } from \"../actions\";\nimport { GET_POKEMONS_BY_TYPES } from '../actions'\n\nlet initialState = {\n    pokemons: [],\n    allPokemons: [],\n    pokemonDetail: [],\n    types: [],\n    pokemonsBuscados: null,\n}\n\nfunction rootReducer(state = initialState, action) {\n    switch (action.type) {\n        case GET_POKEMONS:\n            return {\n                ...state,\n                pokemons: action.payload,\n                allPokemons: action.payload,\n            }\n        case GET_POKEMON_ID:\n            return {\n                ...state,\n                pokemonDetail: action.payload,\n            }\n        case GET_POKEMON_NAME:\n            //console.log('Estoy en reducer: ', action.payload)    \n            let poke = action.payload;\n            //console.log(poke)\n            return {\n                ...state,\n                pokemonsBuscados: poke\n            }\n        case GET_TYPES:\n            return {\n                ...state,\n                types: action.payload,\n            }\n        case GET_POKEMONS_BY_TYPES:\n            let type = action.payload;\n            let allPokemons = state.allPokemons;\n            let pokesByTypes = type === 'allTypes' ?\n                allPokemons :\n                allPokemons.filter((pokes) => pokes.types.includes(type))\n\n            return {\n                ...state,\n                pokemons: pokesByTypes,\n            }\n        case CLEAR_STATES:\n            return {\n\n            }\n        default:\n            return state;\n    }\n}\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}